import pandas as pd
import requests
import zipfile
from io import BytesIO


url = 'https://archive.ics.uci.edu/ml/machine-learning-databases/00222/bank-additional.zip'
response = requests.get(url)
zip_file = zipfile.ZipFile(BytesIO(response.content))
zip_file.extractall()
zip_file_contents = zip_file.namelist()
print(zip_file_contents)
csv_filename = 'bank-additional/bank-additional-full.csv'
data = pd.read_csv(csv_filename, sep=';')
data.head()


# Check for missing values
print(data.isnull().sum())

# Convert categorical variables to dummy variables
data = pd.get_dummies(data, drop_first=True)

# Display the first few rows to confirm changes
data.head()




from sklearn.model_selection import train_test_split
X = data.drop('y_yes', axis=1)
y = data['y_yes']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)



from sklearn.tree import DecisionTreeClassifier
clf = DecisionTreeClassifier(random_state=42)
clf.fit(X_train, y_train)


from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
y_pred = clf.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
report = classification_report(y_test, y_pred)
conf_matrix = confusion_matrix(y_test, y_pred)
print(f'Accuracy: {accuracy}')
print('Classification Report:')
print(report)
print('Confusion Matrix:')
print(conf_matrix)



import matplotlib.pyplot as plt
from sklearn.tree import plot_tree

plt.figure(figsize=(20,10))
plot_tree(clf, filled=True, feature_names=X.columns, class_names=['no', 'yes'], rounded=True)
plt.show()
